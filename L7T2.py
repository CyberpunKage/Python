'''
2. Реализовать проект расчета суммарного расхода ткани на производство одежды. Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
К типам одежды в этом проекте относятся пальто и костюм. У этих типов одежды существуют параметры: размер (для пальто) и рост (для костюма). Это могут быть обычные числа: V и H, соответственно.
Для определения расхода ткани по каждому типу одежды использовать формулы: для пальто (V/6.5 + 0.5), для костюма (2 * H + 0.3). Проверить работу этих методов на реальных данных.
Реализовать общий подсчет расхода ткани. Проверить на практике полученные на этом уроке знания: реализовать абстрактные классы для основных классов проекта, проверить на практике работу декоратора @property.
'''
from abc import ABC, abstractmethod

# Создаю класс продукт абстрактным, а также метод прописывая декоратор. Обязательное условие для последующих классов подсчет суммы методом sum_product.
class Product(ABC):
    @abstractmethod
    def sum_product(self):
        self


# Создаю дочерний класс пальто - Coat и инициализирую исходный параметр - размер V
class Coat(Product):
    def __init__(self, V):
        self.V = V

# Реализация декоратора @property
    @property
    def V(self):
        return self.__V
# Добавляю условие
    @V.setter
    def V(self, V):
        if V < 36:
            self.__V = 36
            print(f'Простите, но вещи меньше {self.__V} размера мы не шьём.')
        elif V > 64:
            self.__V = 64
            print(f'Простите, но вещи больше {self.__V} размера, а также парашуты мы не шьём.')
        else:
            self.__V = V

    def sum_product(self):
        return self.V / 6.5 + 0.5


# Создаю дочерний класс костюм - Suit и инициализирую исходный параметр - рост H
class Suit(Product):
    def __init__(self, H):
        self.H = H

    @property
    def H(self):
        return self.__H

    @H.setter
    def H(self, H):
        if H < 110:
            self.__H = 110
            print(f'Это взрослый магазин.')
        else:
            self.__H = H

    def sum_product(self):
        return 2 * self.H + 0.3


a = Coat(54)
print(f'Для пальто {a.V} размера нужно - {round(a.sum_product(), 2)} ткани')
b = Suit(190)
print(f'Для костюма {b.H} роста нужно - {round(b.sum_product(), 2)} ткани')
